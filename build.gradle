import java.text.SimpleDateFormat

plugins {
    id 'java'
}

dependencies {
    implementation("org.apereo.cas:cas-server-support-json-service-registry:${cas_version}")
    implementation("org.apereo.cas:cas-server-support-themes:${cas_version}")
    implementation("org.apereo.cas:cas-server-support-thymeleaf:${cas_version}")
    implementation("org.apereo.cas:cas-server-webapp-init-tomcat:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-web:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-webflow:${cas_version}")
    implementation("org.apereo.cas:cas-server-core:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-util:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-audit:${cas_version}")
    implementation("org.apereo.cas:cas-server-support-actions:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-logging:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-tickets:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-cookie:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-logout:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-authentication:${cas_version}")
    implementation("org.apereo.cas:cas-server-core-authentication-mfa:${cas_version}")
    implementation("org.apereo.cas:cas-server-support-validation:${cas_version}")
}

group = "org.example"
version = '1.0-SNAPSHOT'
description = 'cas-template'
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

jar {
    enabled = true
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Built-By": System.properties["user.name"],
                "Build-Timestamp": new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                "Created-By": "Gradle ${gradle.gradleVersion}",
                "Build-Jdk": "${System.properties["java.version"]} (${System.properties["java.vendor"]} ${System.properties["java.vm.version"]})",
                "Build-OS": "${System.properties["os.name"]} ${System.properties["os.arch"]} ${System.properties["os.version"]}"
        )
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    maven { url = uri("https://build.shibboleth.net/nexus/content/repositories/releases/") }
    maven { url = uri("https://build.shibboleth.net/maven/releases/") }
    maven { url = uri("https://maven.aliyun.com/nexus/content/groups/public") }
    maven { url = uri("https://maven.aliyun.com/nexus/content/repositories/google") }
    maven { url = uri("https://maven.aliyun.com/nexus/content/repositories/jcenter") }
    maven { url = uri("https://maven.aliyun.com/repository/central") } // central
    maven { url = uri("https://app.camunda.com/nexus/content/groups/public") } // central
    maven { url = uri("https://maven.aliyun.com/repository/public") } // jcenter & public
    maven { url = uri("https://maven.aliyun.com/repository/google") } // google
    maven { url = uri("https://maven.aliyun.com/repository/spring") } // spring
    maven { url = uri("https://maven.aliyun.com/repository/spring-plugin") } // spring plugin
    maven { url = uri("https://maven.aliyun.com/repository/grails-core") } // spring plugin
    mavenCentral()
}
